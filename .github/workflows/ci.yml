name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
        uv pip install pytest-cov
    
    - name: Run tests with coverage
      run: |
        # Run unit tests only - integration tests require real API keys and are for local testing
        uv run pytest tests/ -v -m "not integration" \
          --cov=src/mad_spark_alt \
          --cov-report=html \
          --cov-report=term \
          --cov-report=xml \
          --tb=short \
          --junit-xml=test-results.xml
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: test-results.xml
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.11'
      with:
        name: coverage-report
        path: |
          coverage.xml
          htmlcov/
    
    - name: Display coverage summary
      if: matrix.python-version == '3.11'
      run: |
        echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        uv run coverage report >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
    
    - name: Run type checking
      run: uv run mypy src/mad_spark_alt/
    
    - name: Run linting
      run: uv run black --check src/ tests/
    
    - name: Test CLI
      run: |
        uv run mad-spark --help
        uv run mad-spark list-evaluators
        echo "Test evaluation" | uv run mad-spark evaluate --model test

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
    
    - name: Build package
      run: uv build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/